/* 
 * Copyright (c) 2015 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc.team2084.CMonster2016;

import org.usfirst.frc.team2084.CMonster2016.commands.AimArm;
import org.usfirst.frc.team2084.CMonster2016.commands.AimRobot;
import org.usfirst.frc.team2084.CMonster2016.commands.ClearFaults;
import org.usfirst.frc.team2084.CMonster2016.commands.HomeArm;
import org.usfirst.frc.team2084.CMonster2016.commands.Intake;
import org.usfirst.frc.team2084.CMonster2016.commands.LowGoalScore;
import org.usfirst.frc.team2084.CMonster2016.commands.PowerOnJetson;
import org.usfirst.frc.team2084.CMonster2016.commands.PrepareShot;
import org.usfirst.frc.team2084.CMonster2016.commands.ResetArmAngle;
import org.usfirst.frc.team2084.CMonster2016.commands.ResetGyro;
import org.usfirst.frc.team2084.CMonster2016.commands.RotateToHeading;
import org.usfirst.frc.team2084.CMonster2016.commands.SetArmAngle;
import org.usfirst.frc.team2084.CMonster2016.commands.SetFiringServo;
import org.usfirst.frc.team2084.CMonster2016.commands.SetIntakeSpeed;
import org.usfirst.frc.team2084.CMonster2016.commands.SetShooterSpeed;
import org.usfirst.frc.team2084.CMonster2016.subsystems.ArmSubsystem;
import org.usfirst.frc.team2084.CMonster2016.subsystems.IntakeSubsystem;
import org.usfirst.frc.team2084.CMonster2016.subsystems.ShooterSubsystem;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.buttons.POVHatButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton resetGyroButton;
    public JoystickButton trigger;
    public Joystick driveJoystick;
    public Joystick secondaryJoystick;
    public JoystickButton aimButton;
    public JoystickButton fireButton;
    public POVHatButton intakeButton;
    public POVHatButton lowGoalButton;

    public JoystickButton visionPrepareButton = new JoystickButton(secondaryJoystick, 1);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        secondaryJoystick = new Joystick(1);

        driveJoystick = new Joystick(0);

        resetGyroButton = new JoystickButton(driveJoystick, 12);
        resetGyroButton.whenPressed(new ResetGyro());

        trigger = new JoystickButton(driveJoystick, 1);
        trigger.whenPressed(new SetArmAngle(ArmSubsystem.COLLECT_ANGLE));
        trigger.whenReleased(new SetArmAngle(ArmSubsystem.DOWN_ANGLE));

        aimButton = new JoystickButton(secondaryJoystick, 8);
        aimButton.whileHeld(new PrepareShot());

        fireButton = new JoystickButton(secondaryJoystick, 6);
        fireButton.whenPressed(new SetFiringServo(true));
        fireButton.whenReleased(new SetFiringServo(false));

        intakeButton = new POVHatButton(driveJoystick, 180);
        intakeButton.whileHeld(new Intake());

        lowGoalButton = new POVHatButton(driveJoystick, 0);
        lowGoalButton.whileHeld(new LowGoalScore());

        visionPrepareButton.whenPressed(new SetArmAngle(Math.toRadians(30)));

        // SmartDashboard Buttons
        SmartDashboard.putData("Clear Faults", new ClearFaults());
        SmartDashboard.putData("Reset Gyro", new ResetGyro());
        SmartDashboard.putData("Set Arm Angle", new SetArmAngle(ArmSubsystem.COLLECT_ANGLE, true));
        SmartDashboard.putData("Aim Arm", new AimArm());
        SmartDashboard.putData("Aim Robot", new AimRobot());
        SmartDashboard.putData("Set Shooter Speed", new SetShooterSpeed(ShooterSubsystem.LOW_GOAL_SPEED));
        SmartDashboard.putData("Set Intake Speed: In", new SetIntakeSpeed(IntakeSubsystem.IN_SPEED));
        SmartDashboard.putData("Set Intake Speed: Out", new SetIntakeSpeed(IntakeSubsystem.OUT_SPEED));
        SmartDashboard.putData("Prepare Shot", new PrepareShot());
        SmartDashboard.putData("Intake", new Intake());
        SmartDashboard.putData("Home Arm", new HomeArm());
        SmartDashboard.putData("Reset Arm Position", new ResetArmAngle());
        SmartDashboard.putData("Power On Jetson", new PowerOnJetson());
        SmartDashboard.putData("Set Firing Servo", new SetFiringServo(false));
        SmartDashboard.putData("Rotate To Heading", new RotateToHeading(0));

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getDriveJoystick() {
        return driveJoystick;
    }

    public Joystick getSecondaryJoystick() {
        return secondaryJoystick;
    }

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
